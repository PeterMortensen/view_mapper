View_mapper: Generate complex view code for your models.

See: http://patshaughnessy.net/view_mapper for more details.

Two generators are provided:

1. view_for: This will generate the specified view code for an existing model.

   script/generate view_for model [ --view view:view_parameter ]

   View_for generates HTML fields for each of the specified model's columns.
   If no view is specified, standard Rails scaffolding code will be generated.

2. scaffold_for_view: The same as view_for, except that it will also generate the
   model code files as well. If no view is specified, this generator is identical to
   the standard Rails scaffold generator.

   script/generate scaffold_for_view model [ --view view:view_parameter ]




Right now, one custom view is provided:

1. auto_complete: Generates view code that uses the standard Rails auto_complete plugin
                  for type ahead behavior.

... more views to come!



Examples:
---------

- Generate standard Rails scaffolding for an existing model called "widget":

./script/generate view_for widget
      exists  app/controllers/
      exists  app/helpers/
      create  app/views/widgets
      exists  app/views/layouts/
      exists  test/functional/
      exists  test/unit/
      exists  test/unit/helpers/
      exists  public/stylesheets/
      create  app/views/widgets/index.html.erb
      create  app/views/widgets/show.html.erb
      create  app/views/widgets/new.html.erb
      create  app/views/widgets/edit.html.erb
      create  app/views/layouts/widgets.html.erb
   identical  public/stylesheets/scaffold.css
      create  app/controllers/widgets_controller.rb
      create  test/functional/widgets_controller_test.rb
      create  app/helpers/widgets_helper.rb
      create  test/unit/helpers/widgets_helper_test.rb
       route  map.resources :widgets

- Generate scaffolding for an existing "office" model with auto complete on the "address" field:

./script/generate view_for office --view auto_complete:address
      exists  app/controllers/
      exists  app/helpers/
      create  app/views/offices
      exists  app/views/layouts/
      exists  test/functional/
      exists  test/unit/
      exists  test/unit/helpers/
      exists  public/stylesheets/
      create  app/views/offices/index.html.erb
      create  app/views/offices/show.html.erb
      create  app/views/offices/new.html.erb
      create  app/views/offices/edit.html.erb
      create  app/views/layouts/offices.html.erb
   identical  public/stylesheets/scaffold.css
      create  app/controllers/offices_controller.rb
      create  test/functional/offices_controller_test.rb
      create  app/helpers/offices_helper.rb
      create  test/unit/helpers/offices_helper_test.rb
       route  map.resources :offices
       route  map.connect 'auto_complete_for_office_address', :controller => 'offices', :action => 'auto_complete_for_office_address'

- Generate a new model called "group" containing two fields "name" and "column"
  and also implement auto complete on the "name" column:

./script/generate scaffold_for_view group name:string count:integer --view auto_complete:name
      exists  app/models/
      exists  app/controllers/
      exists  app/helpers/
      create  app/views/groups
      exists  app/views/layouts/
      exists  test/functional/
      exists  test/unit/
      exists  test/unit/helpers/
      exists  public/stylesheets/
      create  app/views/groups/index.html.erb
      create  app/views/groups/show.html.erb
      create  app/views/groups/new.html.erb
      create  app/views/groups/edit.html.erb
      create  app/views/layouts/groups.html.erb
   identical  public/stylesheets/scaffold.css
      create  app/controllers/groups_controller.rb
      create  test/functional/groups_controller_test.rb
      create  app/helpers/groups_helper.rb
      create  test/unit/helpers/groups_helper_test.rb
       route  map.resources :groups
  dependency  model
      exists    app/models/
      exists    test/unit/
      exists    test/fixtures/
      create    app/models/group.rb
      create    test/unit/group_test.rb
      create    test/fixtures/groups.yml
      exists    db/migrate
      create    db/migrate/20090930171024_create_groups.rb
       route  map.connect 'auto_complete_for_group_name', :controller => 'groups', :action => 'auto_complete_for_group_name'

